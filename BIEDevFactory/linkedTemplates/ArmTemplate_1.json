{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "BIEDevFactory"
		},
		"AzureBIDevelopment_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureBIDevelopment'"
		},
		"BIP01_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'BIP01'"
		},
		"biedev storage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'biedev storage'"
		},
		"DBNSQLP01_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DBNSQLP01'",
			"defaultValue": "Integrated Security=True;Data Source=DBNSQLP01;Initial Catalog=CarharttDW"
		},
		"DBNSQLP01_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'DBNSQLP01'"
		},
		"DBNSQLPNET_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DBNSQLPNET'",
			"defaultValue": "Integrated Security=True;Data Source=dbnsqlpnet.carhartt-nt.carhartt.com;Initial Catalog=CarharttDW;multisubnetfailover=True"
		},
		"DBNSQLPNET_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'DBNSQLPNET'"
		},
		"DBNSQLPNET_RO_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DBNSQLPNET_RO'",
			"defaultValue": "Integrated Security=True;Data Source=dbnsqlpnet.carhartt-nt.carhartt.com;Initial Catalog=CarharttDW;multisubnetfailover=True;applicationintent=ReadOnly"
		},
		"DBNSQLPNET_RO_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'DBNSQLPNET_RO'"
		},
		"AzureBIDevelopment_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://management.azure.com/"
		},
		"AzureBIDevelopment_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "bobjservice@carhartt.com"
		},
		"BIEKeyChain_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://BIEDevKeyChain.vault.azure.net/"
		},
		"DBNSQLP01_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "carhartt-nt\\bobjservice"
		},
		"DBNSQLPNET_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "BIServiceAdmin@carharttdev.com"
		},
		"DBNSQLPNET_RO_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "BIServiceAdmin@carharttdev.com"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "NightlyDimensions",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "00:15:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://api.powerbi.com/v1.0/myorg/groups/516449d1-03ba-45f4-9500-c94aee0d3912/datasets/6181c309-ac65-4198-b329-3892202ae9fe/refreshes",
							"body": {
								"value": "@concat('{\n    \"Type\": \"Full\",\n    \"CommitMode\": \"transactional\",\n    \"MaxParallelism\": 10,\n    \"RetryCount\": 0,\n    \"Objects\": [\n        {\n            \"table\": \"Style\"\n        }\n    ]\n}')",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://analysis.windows.net/powerbi/api"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Plants"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBIDevelopment')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('AzureBIDevelopment_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('AzureBIDevelopment_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureBIDevelopment_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BIEKeyChain')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('BIEKeyChain_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BIP01')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('BIP01_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/biedev storage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('biedev storage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/4AM Process')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-07-07T03:57:00",
						"timeZone": "Eastern Standard Time",
						"schedule": {
							"minutes": [
								1
							],
							"hours": [
								4
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EndOfDay')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-08-01T13:30:00",
						"timeZone": "Eastern Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								20
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HourlyRun')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-08-24T23:05:00",
						"timeZone": "Eastern Standard Time",
						"schedule": {
							"minutes": [
								15
							],
							"hours": [
								4,
								5,
								6,
								7,
								8,
								9,
								10,
								11,
								12,
								13,
								14,
								15,
								16,
								17,
								18,
								19
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MidnightRun')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-08-24T23:01:00",
						"timeZone": "Eastern Standard Time",
						"schedule": {
							"minutes": [
								10
							],
							"hours": [
								0
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RunTasks1200')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-08-01T13:30:00",
						"timeZone": "Eastern Standard Time",
						"schedule": {
							"minutes": [
								0,
								20,
								40
							],
							"hours": [
								5,
								6,
								7,
								8,
								9,
								10,
								11,
								12,
								13,
								14,
								15,
								16,
								17,
								18,
								19
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/StatusCheck120')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-03-01T00:00:00",
						"timeZone": "Eastern Standard Time",
						"schedule": {
							"minutes": [
								1
							],
							"hours": [
								9,
								11,
								13,
								15,
								17
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GWP02IntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "OnPrem Integration Service running on DBNPBIEGWP05 and DBNPBIEGWP06",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PNETIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "This IR works as Gateway for internal resources in Carhartt Production",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SupplyProcessNotification')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SyncRefresh",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://northcentralus.asazure.windows.net/servers/carharttbiasq01/models/Supply/refreshes",
							"body": {
								"value": "@concat('{\n    \"Type\": \"Full\",\n    \"CommitMode\": \"transactional\",\n    \"MaxParallelism\": 2,\n    \"RetryCount\": 2,\n    \"Objects\": [\n        {\n            \"table\": \"Production Plans\",\n            \"partition\": \"DimCustomer\"\n        },\n        {\n            \"table\": \"Dates\"\n        }\n    ]\n}')",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://*.asazure.windows.net  "
							}
						}
					},
					{
						"name": "FormatResponse",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "SyncRefresh",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Response",
							"value": {
								"value": "@array(last(json(activity('SyncRefresh').output.Response)))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FormatResponse",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Microsoft Teams Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"teamsWebhookUrl": "https://carhartt.webhook.office.com/webhookb2/821a9519-9995-4e07-8f41-359204fb1c05@b4e848aa-20ef-4814-a34a-93fe53f3970f/IncomingWebhook/53212b4e54754a3097bd0b26030417bc/dfb007ca-9396-4a1c-9d58-b1b1499518b9",
								"ProcessName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"StartTime": {
									"value": "@string(formatDateTime(variables('Response')[0].startTime))",
									"type": "Expression"
								},
								"EndTime": {
									"value": "@string(formatDateTime(variables('Response')[0].endTime))",
									"type": "Expression"
								},
								"RefreshId": {
									"value": "@string(variables('Response')[0].refreshid)",
									"type": "Expression"
								},
								"Status": {
									"value": "@string(variables('Response')[0].status)",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Response": {
						"type": "Array"
					},
					"LastRefreshId": {
						"type": "String"
					}
				},
				"folder": {
					"name": "WIP"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WIP_OrdersNotification')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SyncRefresh",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://northcentralus.asazure.windows.net/servers/carharttbiasp01/models/Orders/refreshes",
							"body": {
								"value": "@concat('{\n    \"Type\": \"Full\",\n    \"CommitMode\": \"transactional\",\n    \"MaxParallelism\": 2,\n    \"RetryCount\": 2,\n    \"Objects\": [\n        {\n            \"table\": \"Production Plans\",\n            \"partition\": \"DimCustomer\"\n        },\n        {\n            \"table\": \"Dates\"\n        }\n    ]\n}')",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://*.asazure.windows.net  "
							}
						}
					},
					{
						"name": "FormatResponse",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "SyncRefresh",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Response",
							"value": {
								"value": "@array(json(activity('SyncRefresh').output.Response))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "SetStartRefresh",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('Response')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Newest Refresh",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(formatDateTime(item().startTime),formatDateTime(variables('RefreshDate')))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "SetRefresh",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "LastRefreshId",
													"value": {
														"value": "@item().refreshId",
														"type": "Expression"
													}
												}
											},
											{
												"name": "GreaterDate",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "SetRefresh",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "RefreshDate",
													"value": {
														"value": "@item().startTime",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "SetStartDate",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "FormatResponse",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "RefreshDate",
							"value": {
								"value": "@formatDateTime(string(array(last(json(activity('SyncRefresh').output.Response)))[0].startTime))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "RefreshDetails",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@concat('https://northcentralus.asazure.windows.net/servers/carharttbiasp01/models/Orders/refreshes/',variables('LastRefreshId'))",
								"type": "Expression"
							},
							"body": {
								"value": "@concat('{\n    \"Type\": \"Full\",\n    \"CommitMode\": \"transactional\",\n    \"MaxParallelism\": 2,\n    \"RetryCount\": 2,\n    \"Objects\": [\n        {\n            \"table\": \"Production Plans\",\n            \"partition\": \"DimCustomer\"\n        },\n        {\n            \"table\": \"Dates\"\n        }\n    ]\n}')",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://*.asazure.windows.net  "
							}
						}
					},
					{
						"name": "Send Teams Notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RefreshDetails",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Microsoft Teams Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"teamsWebhookUrl": "https://carhartt.webhook.office.com/webhookb2/821a9519-9995-4e07-8f41-359204fb1c05@b4e848aa-20ef-4814-a34a-93fe53f3970f/IncomingWebhook/53212b4e54754a3097bd0b26030417bc/dfb007ca-9396-4a1c-9d58-b1b1499518b9",
								"ProcessName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"StartTime": {
									"value": "@string(convertFromUtc(formatDateTime(activity('RefreshDetails').output.startTime),'Eastern Standard Time'))",
									"type": "Expression"
								},
								"EndTime": {
									"value": "@string(convertFromUtc(formatDateTime(activity('RefreshDetails').output.endTime),'Eastern Standard Time'))",
									"type": "Expression"
								},
								"RefreshId": {
									"value": "@string(variables('LastRefreshId'))",
									"type": "Expression"
								},
								"Status": {
									"value": "@string(activity('RefreshDetails').output.status)",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SetStartRefresh",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "SetStartDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "LastRefreshId",
							"value": {
								"value": "@string(array(last(json(activity('SyncRefresh').output.Response)))[0].refreshId)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Response": {
						"type": "Array"
					},
					"LastRefreshId": {
						"type": "String"
					},
					"RefreshDate": {
						"type": "String"
					},
					"CurrentDate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "WIP"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WIP_SupplyNotification')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SyncRefresh",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://northcentralus.asazure.windows.net/servers/carharttbiasp01/models/Supply/refreshes",
							"body": {
								"value": "@concat('{\n    \"Type\": \"Full\",\n    \"CommitMode\": \"transactional\",\n    \"MaxParallelism\": 2,\n    \"RetryCount\": 2,\n    \"Objects\": [\n        {\n            \"table\": \"Production Plans\",\n            \"partition\": \"DimCustomer\"\n        },\n        {\n            \"table\": \"Dates\"\n        }\n    ]\n}')",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://*.asazure.windows.net  "
							}
						}
					},
					{
						"name": "FormatResponse",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "SyncRefresh",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Response",
							"value": {
								"value": "@array(json(activity('SyncRefresh').output.Response))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "SetStartRefresh",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('Response')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Newest Refresh",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(formatDateTime(item().startTime),formatDateTime(variables('RefreshDate')))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "SetRefresh",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "LastRefreshId",
													"value": {
														"value": "@item().refreshId",
														"type": "Expression"
													}
												}
											},
											{
												"name": "GreaterDate",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "SetRefresh",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "RefreshDate",
													"value": {
														"value": "@item().startTime",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "SetStartDate",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "FormatResponse",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "RefreshDate",
							"value": {
								"value": "@formatDateTime(string(array(last(json(activity('SyncRefresh').output.Response)))[0].startTime))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "RefreshDetails",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@concat('https://northcentralus.asazure.windows.net/servers/carharttbiasp01/models/Supply/refreshes/',variables('LastRefreshId'))",
								"type": "Expression"
							},
							"body": {
								"value": "@concat('{\n    \"Type\": \"Full\",\n    \"CommitMode\": \"transactional\",\n    \"MaxParallelism\": 2,\n    \"RetryCount\": 2,\n    \"Objects\": [\n        {\n            \"table\": \"Production Plans\",\n            \"partition\": \"DimCustomer\"\n        },\n        {\n            \"table\": \"Dates\"\n        }\n    ]\n}')",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://*.asazure.windows.net  "
							}
						}
					},
					{
						"name": "Send Teams Notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RefreshDetails",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Microsoft Teams Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"teamsWebhookUrl": "https://carhartt.webhook.office.com/webhookb2/821a9519-9995-4e07-8f41-359204fb1c05@b4e848aa-20ef-4814-a34a-93fe53f3970f/IncomingWebhook/53212b4e54754a3097bd0b26030417bc/dfb007ca-9396-4a1c-9d58-b1b1499518b9",
								"ProcessName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"StartTime": {
									"value": "@string(convertFromUtc(formatDateTime(activity('RefreshDetails').output.startTime),'Eastern Standard Time'))",
									"type": "Expression"
								},
								"EndTime": {
									"value": "@string(convertFromUtc(formatDateTime(activity('RefreshDetails').output.endTime),'Eastern Standard Time'))",
									"type": "Expression"
								},
								"RefreshId": {
									"value": "@string(variables('LastRefreshId'))",
									"type": "Expression"
								},
								"Status": {
									"value": "@string(activity('RefreshDetails').output.status)",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SetStartRefresh",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "SetStartDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "LastRefreshId",
							"value": {
								"value": "@string(array(last(json(activity('SyncRefresh').output.Response)))[0].refreshId)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Response": {
						"type": "Array"
					},
					"LastRefreshId": {
						"type": "String"
					},
					"RefreshDate": {
						"type": "String"
					},
					"CurrentDate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "WIP"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQLQueue')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BIP01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Schema": {
						"type": "string",
						"defaultValue": "Lorem"
					},
					"Table": {
						"type": "string",
						"defaultValue": "Ipsum"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BIP01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DBNSQLP01')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('DBNSQLP01_connectionString')]",
					"userName": "[parameters('DBNSQLP01_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('DBNSQLP01_password')]"
					}
				},
				"connectVia": {
					"referenceName": "GWP02IntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/GWP02IntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DBNSQLPNET')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('DBNSQLPNET_connectionString')]",
					"userName": "[parameters('DBNSQLPNET_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('DBNSQLPNET_password')]"
					}
				},
				"connectVia": {
					"referenceName": "PNETIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/PNETIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DBNSQLPNET_RO')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('DBNSQLPNET_RO_connectionString')]",
					"userName": "[parameters('DBNSQLPNET_RO_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('DBNSQLPNET_RO_password')]"
					}
				},
				"connectVia": {
					"referenceName": "PNETIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/PNETIntegrationRuntime')]"
			]
		}
	]
}