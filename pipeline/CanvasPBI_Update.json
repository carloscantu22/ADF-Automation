{
	"name": "CanvasPBI_Update",
	"properties": {
		"activities": [
			{
				"name": "GetRefresh",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "GetRefreshId",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat('https://api.powerbi.com/v1.0/myorg/groups/d2584f83-3b80-414f-a5c5-2f3035983c85/datasets/5f7a2fe6-b9bd-4c35-91e2-ce420255bc6c/refreshes/',string(activity('GetRefreshId').output.firstRow.RequestId))",
						"type": "Expression"
					},
					"method": "GET",
					"body": {
						"value": "@concat('{\n    \"Type\": \"Full\",\n    \"CommitMode\": \"transactional\",\n    \"MaxParallelism\": 2,\n    \"RetryCount\": 2,\n    \"Objects\": [\n        {\n            \"table\": \"Production Plans\",\n            \"partition\": \"DimCustomer\"\n        },\n        {\n            \"table\": \"Dates\"\n        }\n    ]\n}')",
						"type": "Expression"
					},
					"authentication": {
						"type": "MSI",
						"resource": "https://analysis.windows.net/powerbi/api"
					}
				}
			},
			{
				"name": "GetRefreshId",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "  SELECT [EventId],[RequestId],[EventName],[PipelineRunID] FROM [Controls].[ADFRefreshQueue]\nWHERE [EventType] = 'PBI Refresh' AND [ModelName] = 'Canvas' AND [EventStatus] = 'R'\nORDER BY [EventId]",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSQLQueue",
						"type": "DatasetReference",
						"parameters": {
							"Schema": "Lorem",
							"Table": "Ipsum"
						}
					}
				}
			},
			{
				"name": "Switch1",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "GetRefresh",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@activity('GetRefresh').output.status",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "Completed",
							"activities": [
								{
									"name": "UpdateQueue_Succeed",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[Controls].[UpdateADFQueueRefresh]",
										"storedProcedureParameters": {
											"endTime": {
												"value": {
													"value": "@convertFromUtc(formatDateTime(activity('GetRefresh').output.endTime, 'yyyy-MM-ddTHH:mm:ss.fffffffZ'),'Eastern Standard Time')",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"eventId": {
												"value": {
													"value": "@int(activity('GetRefreshId').output.firstRow.EventId)",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"requestId": {
												"value": {
													"value": "@string(activity('GetRefreshId').output.firstRow.RequestId)",
													"type": "Expression"
												},
												"type": "String"
											},
											"startTime": {
												"value": {
													"value": "@convertFromUtc(formatDateTime(activity('GetRefresh').output.startTime, 'yyyy-MM-ddTHH:mm:ss.fffffffZ'),'Eastern Standard Time')",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"status": {
												"value": "C",
												"type": "String"
											},
											"statusMessage": {
												"value": null,
												"type": "String"
											},
											"pipelineRunId": {
												"value": {
													"value": "@activity('GetRefreshId').output.firstRow.PipelineRunID",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "BIP01",
										"type": "LinkedServiceReference"
									}
								}
							]
						},
						{
							"value": "cancelled",
							"activities": [
								{
									"name": "UpdateQueue_Cancelled",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[Controls].[ADFQueueUpdate]",
										"storedProcedureParameters": {
											"endTime": {
												"value": {
													"value": "@convertFromUtc(formatDateTime(activity('GetRefresh').output.endTime),'Eastern Standard Time')",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"eventId": {
												"value": {
													"value": "@int(activity('GetRefreshId').output.firstRow.EventId)",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"refreshId": {
												"value": {
													"value": "@string(activity('GetRefreshId').output.firstRow.RefreshId)",
													"type": "Expression"
												},
												"type": "String"
											},
											"startTime": {
												"value": {
													"value": "@convertFromUtc(formatDateTime(activity('GetRefresh').output.startTime),'Eastern Standard Time')",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"status": {
												"value": "F",
												"type": "String"
											},
											"statusMessage": {
												"value": "Cancelled due to request by user.",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "BIP01",
										"type": "LinkedServiceReference"
									}
								}
							]
						},
						{
							"value": "failed",
							"activities": [
								{
									"name": "UpdateQueue_Fail",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Insert to Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[Controls].[ADFQueueUpdate]",
										"storedProcedureParameters": {
											"endTime": {
												"value": null,
												"type": "DateTime"
											},
											"eventId": {
												"value": {
													"value": "@int(activity('GetRefreshId').output.firstRow.EventId)",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"refreshId": {
												"value": null,
												"type": "String"
											},
											"startTime": {
												"value": null,
												"type": "DateTime"
											},
											"status": {
												"value": null,
												"type": "String"
											},
											"statusMessage": {
												"value": "Exception Alerted.",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "BIP01",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SetMessage",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Message",
										"value": {
											"value": "@replace(replace(replace(replace(join(activity('GetRefresh').output.messages, ','), '{\"message\":', ''), '}', ''), '-',''),'''','')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Insert to Log",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "SetMessage",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT ',activity('GetRefreshId').output.firstRow.EventId,' AS ''EventId''\n\t  ,''',variables('Message'),''' AS ''EventStatusMessage''')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "AzureSQLQueue",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "Lorem",
												"Table": "Ipsum"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSQLQueue",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "Controls",
												"Table": "AzureSharedEventQueueExceptions"
											}
										}
									]
								},
								{
									"name": "SendMail",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Insert to Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://prod-05.northcentralus.logic.azure.com:443/workflows/a7ec1a338e8541f092c44178a0d0c201/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=co5WA5F6jucJvp2ui_nfHwjQ6ICRtwQ8NDiUCWi1998",
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@concat('{\"RefreshId\" : \"',trim(activity('GetRefreshId').output.firstRow.RefreshId),'\" , \"EventName\" : \"',activity('GetRefreshId').output.firstRow.EventName,'\"}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "TeamsNotification",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Insert to Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Teams Notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"messageCard": {
												"value": "{\n    \"@type\": \"MessageCard\",\n    \"@context\": \"http://schema.org/extensions\",\n    \"themeColor\": \"FF0000\",\n    \"summary\": \"Supply Event Failed\",\n    \"sections\": [\n        {\n            \"activityTitle\": \"Supply Event Failed\",\n            \"facts\": [\n                {\n                    \"name\": \"Event ID:\",\n                    \"value\": \"@{activity('GetRefreshId').output.firstRow.EventId}\"\n                },\n                {\n                    \"name\": \"Event Name:\",\n                    \"value\": \"@{activity('GetRefreshId').output.firstRow.EventName}\"\n                },\n                {\n                    \"name\": \"Refresh ID:\",\n                    \"value\": \"@{activity('GetRefreshId').output.firstRow.RefreshId}\"\n                },\n                {\n                    \"name\": \"Notification time (EST):\",\n                    \"value\": \"@{convertFromUtc(utcnow(),'Eastern Standard Time')}\"\n                }\n            ],\n            \"markdown\": true\n        }\n    ]\n}",
												"type": "Expression"
											}
										}
									}
								}
							]
						},
						{
							"value": "InProgress",
							"activities": [
								{
									"name": "UpdateCanvas_Running",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[Controls].[UpdateADFQueueRefresh]",
										"storedProcedureParameters": {
											"endTime": {
												"value": null,
												"type": "DateTime"
											},
											"eventId": {
												"value": {
													"value": "@int(activity('GetRefreshId').output.firstRow.EventId)",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"pipelineRunId": {
												"value": {
													"value": "@activity('GetRefreshId').output.firstRow.PipelineRunID",
													"type": "Expression"
												},
												"type": "String"
											},
											"requestId": {
												"value": {
													"value": "@activity('GetRefreshId').output.firstRow.RequestID",
													"type": "Expression"
												},
												"type": "String"
											},
											"startTime": {
												"value": {
													"value": "@convertFromUtc(formatDateTime(activity('GetRefresh').output.startTime),'Eastern Standard Time')",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"status": {
												"value": "R",
												"type": "String"
											},
											"statusMessage": {
												"value": {
													"value": "@concat('Running: ',formatDateTime(convertFromUtc(utcnow(),'Eastern Standard Time'),'HH:mm:ss'))",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "BIP01",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					]
				}
			}
		],
		"variables": {
			"Response": {
				"type": "Array"
			},
			"RefreshId": {
				"type": "String"
			},
			"EventId": {
				"type": "String"
			},
			"Message": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Canvas"
		},
		"annotations": []
	}
}