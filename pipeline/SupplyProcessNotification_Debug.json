{
	"name": "SupplyProcessNotification_Debug",
	"properties": {
		"activities": [
			{
				"name": "SyncRefresh",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://northcentralus.asazure.windows.net/servers/carharttbiasq01/models/Supply/refreshes",
					"method": "GET",
					"body": {
						"value": "@concat('{\n    \"Type\": \"Full\",\n    \"CommitMode\": \"transactional\",\n    \"MaxParallelism\": 2,\n    \"RetryCount\": 2,\n    \"Objects\": [\n        {\n            \"table\": \"Production Plans\",\n            \"partition\": \"DimCustomer\"\n        },\n        {\n            \"table\": \"Dates\"\n        }\n    ]\n}')",
						"type": "Expression"
					},
					"authentication": {
						"type": "MSI",
						"resource": "https://*.asazure.windows.net  "
					}
				}
			},
			{
				"name": "FormatResponse",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "SyncRefresh",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "Response",
					"value": {
						"value": "@array(json(activity('SyncRefresh').output.Response))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "SetDate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@variables('Response')",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "LoopDate",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "CurrentDate",
								"value": {
									"value": "@item().startDate",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Newest Refresh",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "LoopDate",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(item().startTime,variables('RefreshDate'))",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Set variable1",
										"type": "SetVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "RefreshDate",
											"value": {
												"value": "@item().startTime",
												"type": "Expression"
											}
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Set variable2",
										"type": "SetVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "LastRefreshId",
											"value": {
												"value": "@item().refreshId",
												"type": "Expression"
											}
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "SetDate",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "FormatResponse",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "RefreshDate",
					"value": {
						"value": "@formatDateTime(string(array(last(json(activity('SyncRefresh').output.Response)))[0].startTime))",
						"type": "Expression"
					}
				}
			}
		],
		"variables": {
			"Response": {
				"type": "Array"
			},
			"LastRefreshId": {
				"type": "String"
			},
			"RefreshDate": {
				"type": "String"
			},
			"CurrentDate": {
				"type": "String"
			}
		},
		"annotations": []
	}
}