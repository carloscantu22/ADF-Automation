{
	"name": "Warehouse_Refresh",
	"properties": {
		"activities": [
			{
				"name": "Switch1",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "ReadRefresh",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@activity('ReadRefresh').output.firstRow.EventName",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "Nightly_Begin",
							"activities": [
								{
									"name": "SetNoRefresh_01",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "ProcessingConditional",
										"value": "0"
									}
								}
							]
						},
						{
							"value": "Nightly_End",
							"activities": [
								{
									"name": "SetNoRefresh_02",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "ProcessingConditional",
										"value": "0"
									}
								},
								{
									"name": "SendCompletionEmail",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "SetNoRefresh_02",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://prod-13.northcentralus.logic.azure.com:443/workflows/edec3768a21d4a618a89c7ccf8c4ad0b/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=Om-PN4tQZfPmI_KeEBQTkW7qGjSwrgbMrvF8RSqCfQ8",
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@concat('{\"ModelName\" : \"','PBI Warehouse','\" , \"StartDateTime\" : \"',utcnow(),'\"}')",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"value": "Nightly_Dimensions",
							"activities": [
								{
									"name": "Set_Tables_04",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "TableRefreshQueue",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "RefreshParameters",
										"value": {
											"value": "@concat('{\n    \"Type\": \"Full\",\n    \"CommitMode\": \"transactional\",\n    \"MaxParallelism\": 6,\n    \"RetryCount\": 0,\n    \"Objects\": ',activity('TableRefreshQueue').output.firstRow.Refresh,'\n}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "TableRefreshQueue",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "SetForRefresh_04",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT CAST(\n(\n\tSELECT TRIM([Tablename]) AS ''table''\n\tFROM [Controls].[ADFEventRefreshCatalog]\n\t\tWHERE [EventName] = ''',activity('ReadRefresh').output.firstRow.EventName,'''\n\t\tAND [ModelName] = ''Warehouse''\n\t\tAND [ValidFlag] = ''Y''\n\tFOR JSON AUTO\n) AS varchar(MAX)) AS ''Refresh''')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureSQLQueue",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "Lorem",
												"Table": "Ipsum"
											}
										}
									}
								},
								{
									"name": "SetForRefresh_04",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "ProcessingConditional",
										"value": "1"
									}
								}
							]
						},
						{
							"value": "Nightly_Facts",
							"activities": [
								{
									"name": "Set_Tables_05",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Tables_Nightly_Facts",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "RefreshParameters",
										"value": {
											"value": "@concat('{\n    \"Type\": \"Full\",\n    \"CommitMode\": \"transactional\",\n    \"MaxParallelism\": 6,\n    \"RetryCount\": 0,\n    \"Objects\": ',activity('Tables_Nightly_Facts').output.firstRow.Refresh,'\n}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Tables_Nightly_Facts",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "SetRefreshFlag05",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT CAST(\n(\n\tSELECT TRIM([Tablename]) AS ''table''\n\tFROM [Controls].[ADFEventRefreshCatalog]\n\t\tWHERE [EventName] = ''',activity('ReadRefresh').output.firstRow.EventName,'''\n\t\tAND [ModelName] = ''Warehouse''\n\t\tAND [ValidFlag] = ''Y''\n\tFOR JSON AUTO\n) AS varchar(MAX)) AS ''Refresh''')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureSQLQueue",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "Lorem",
												"Table": "Ipsum"
											}
										}
									}
								},
								{
									"name": "SetRefreshFlag05",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "ProcessingConditional",
										"value": "1"
									}
								}
							]
						},
						{
							"value": "Facts_Partitions",
							"activities": [
								{
									"name": "Set_Tables_06",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Tables_Facts_Partition",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "RefreshParameters",
										"value": {
											"value": "@concat('{\n    \"Type\": \"Full\",\n    \"CommitMode\": \"transactional\",\n    \"MaxParallelism\": 6,\n    \"RetryCount\": 0,\n    \"Objects\": ',activity('Tables_Facts_Partition').output.firstRow.Refresh,'\n}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SetRefreshFlag06",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "ProcessingConditional",
										"value": "1"
									}
								},
								{
									"name": "Tables_Facts_Partition",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "SetRefreshFlag06",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT CAST(\n(\n\tSELECT TRIM([Tablename]) AS ''table''\n\tFROM [Controls].[ADFEventRefreshCatalog]\n\t\tWHERE [EventName] = ''',activity('ReadRefresh').output.firstRow.EventName,'''\n\t\tAND [ModelName] = ''Warehouse''\n\t\tAND [ValidFlag] = ''Y''\n\tFOR JSON AUTO\n) AS varchar(MAX)) AS ''Refresh''')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureSQLQueue",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "Lorem",
												"Table": "Ipsum"
											}
										}
									}
								}
							]
						},
						{
							"value": "Hourly",
							"activities": [
								{
									"name": "Set_Tables_Hourly",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "TableRefreshQueue_Hourly",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "RefreshParameters",
										"value": {
											"value": "@concat('{\n    \"Type\": \"Full\",\n    \"CommitMode\": \"transactional\",\n    \"MaxParallelism\": 6,\n    \"RetryCount\": 0,\n    \"Objects\": ',activity('TableRefreshQueue_Hourly').output.firstRow.Refresh,'\n}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "TableRefreshQueue_Hourly",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "SetForRefresh_Hourly",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT CAST(\n(\n\tSELECT TRIM([Tablename]) AS ''table''\n\tFROM [Controls].[ADFEventRefreshCatalog]\n\t\tWHERE [EventName] = ''',activity('ReadRefresh').output.firstRow.EventName,'''\n\t\tAND [ModelName] = ''Supply''\n\t\tAND [ValidFlag] = ''Y''\n\tFOR JSON AUTO\n) AS varchar(MAX)) AS ''Refresh''')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureSQLQueue",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "Lorem",
												"Table": "Ipsum"
											}
										}
									}
								},
								{
									"name": "SetForRefresh_Hourly",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "ProcessingConditional",
										"value": "1"
									}
								}
							]
						},
						{
							"value": "UpdateSP",
							"activities": [
								{
									"name": "Update Drop Units",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "SetCompleteHold",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[Tabular_Warehouse].[RollingUnitsNotWaved]",
										"storedProcedureParameters": {
											"option": {
												"value": "L3D",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DBNSQLPNET",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "UpdateSLA",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Update Drop Units",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SLACalculation",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true
									}
								},
								{
									"name": "SetCompleteHold",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[Controls].[UpdateADFQueueRefresh]",
										"storedProcedureParameters": {
											"endTime": {
												"value": {
													"value": "@convertFromUtc(utcnow(),'Eastern Standard Time')",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"eventId": {
												"value": {
													"value": "@int(activity('ReadRefresh').output.firstRow.EventId)",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"pipelineRunId": {
												"value": {
													"value": "@string(pipeline().RunId)",
													"type": "Expression"
												},
												"type": "String"
											},
											"requestId": {
												"value": null,
												"type": "String"
											},
											"startTime": {
												"value": {
													"value": "@convertFromUtc(pipeline().TriggerTime,'Eastern Standard Time')",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"status": {
												"value": "C",
												"type": "String"
											},
											"statusMessage": {
												"value": "Flag Event",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "BIP01",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert Nightly Events",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "UpdateSLA",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "WarehouseNightlyRun",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true
									}
								},
								{
									"name": "SetNoRefresh_SLA",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Insert Nightly Events",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "ProcessingConditional",
										"value": "0"
									}
								}
							]
						},
						{
							"value": "Dates_Dimensions",
							"activities": [
								{
									"name": "Set_Table_DatesDimensions",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "TableRefresh_DatesDimensions",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "RefreshParameters",
										"value": {
											"value": "@concat('{\n    \"Type\": \"Full\",\n    \"CommitMode\": \"transactional\",\n    \"MaxParallelism\": 6,\n    \"RetryCount\": 0,\n    \"Objects\": ',activity('TableRefresh_DatesDimensions').output.firstRow.Refresh,'\n}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "TableRefresh_DatesDimensions",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "SetForRefresh_DatesDimensions",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT CAST(\n(\n\tSELECT TRIM([Tablename]) AS ''table''\n\tFROM [Controls].[ADFEventRefreshCatalog]\n\t\tWHERE [EventName] = ''',activity('ReadRefresh').output.firstRow.EventName,'''\n\t\tAND [ModelName] = ''Warehouse''\n\t\tAND [ValidFlag] = ''Y''\n\tFOR JSON AUTO\n) AS varchar(MAX)) AS ''Refresh''')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureSQLQueue",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "Lorem",
												"Table": "Ipsum"
											}
										}
									}
								},
								{
									"name": "SetForRefresh_DatesDimensions",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "ProcessingConditional",
										"value": "1"
									}
								}
							]
						}
					],
					"defaultActivities": [
						{
							"name": "UpdateQueue_UnknowEvent",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[Controls].[UpdateADFQueueRefresh]",
								"storedProcedureParameters": {
									"endTime": {
										"value": null,
										"type": "DateTime"
									},
									"eventId": {
										"value": {
											"value": "@int(activity('ReadRefresh').output.firstRow.EventId)",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"pipelineRunId": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									},
									"requestId": {
										"value": null,
										"type": "String"
									},
									"startTime": {
										"value": null,
										"type": "DateTime"
									},
									"status": {
										"value": "F",
										"type": "String"
									},
									"statusMessage": {
										"value": "ERROR: Unknown Event Name",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "BIP01",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "ReadRefresh",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT [EventId],[EventName] FROM [Controls].[ADFRefreshQueue]\nWHERE [ModelName] = 'Warehouse'\n\t  AND [EventType] = 'PBI Refresh'\n\t  AND [EventStatus] IS NULL\nORDER BY [EventId]",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSQLQueue",
						"type": "DatasetReference",
						"parameters": {
							"Schema": "Lorem",
							"Table": "Ipsum"
						}
					}
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Switch1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(int(variables('ProcessingConditional')),1)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "UpdateFlagQueue",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[Controls].[UpdateADFQueueRefresh]",
								"storedProcedureParameters": {
									"endTime": {
										"value": {
											"value": "@convertFromUtc(utcnow(),'Eastern Standard Time')",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"eventId": {
										"value": {
											"value": "@int(activity('ReadRefresh').output.firstRow.EventId)",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"pipelineRunId": {
										"value": {
											"value": "@string(pipeline().RunId)",
											"type": "Expression"
										},
										"type": "String"
									},
									"requestId": {
										"value": null,
										"type": "String"
									},
									"startTime": {
										"value": {
											"value": "@convertFromUtc(pipeline().TriggerTime,'Eastern Standard Time')",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"status": {
										"value": "C",
										"type": "String"
									},
									"statusMessage": {
										"value": "Flag Event",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "BIP01",
								"type": "LinkedServiceReference"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "RefreshWarehousePBI",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "00:00:25",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": "https://api.powerbi.com/v1.0/myorg/groups/7f9759c8-270b-4e68-a251-7fb844a51e9b/datasets/1e04c36c-aa71-43a4-bd7b-843e24169196/refreshes",
								"method": "POST",
								"body": {
									"value": "@variables('RefreshParameters')",
									"type": "Expression"
								},
								"authentication": {
									"type": "MSI",
									"resource": "https://analysis.windows.net/powerbi/api"
								}
							}
						},
						{
							"name": "GetRefresh",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "RefreshWarehousePBI",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": "https://api.powerbi.com/v1.0/myorg/groups/7f9759c8-270b-4e68-a251-7fb844a51e9b/datasets/1e04c36c-aa71-43a4-bd7b-843e24169196/refreshes?$top=2",
								"method": "GET",
								"authentication": {
									"type": "MSI",
									"resource": "https://analysis.windows.net/powerbi/api"
								}
							}
						},
						{
							"name": "FormatResponse",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "GetRefresh",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "Response",
								"value": {
									"value": "@array(first(activity('GetRefresh').output.value))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "UpdateQueue",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "FormatResponse",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[Controls].[UpdateADFQueueRefresh]",
								"storedProcedureParameters": {
									"endTime": {
										"value": null,
										"type": "DateTime"
									},
									"eventId": {
										"value": {
											"value": "@int(activity('ReadRefresh').output.firstRow.EventId)",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"pipelineRunId": {
										"value": {
											"value": "@string(pipeline().RunId)",
											"type": "Expression"
										},
										"type": "String"
									},
									"requestId": {
										"value": {
											"value": "@string(variables('Response')[0].requestId)",
											"type": "Expression"
										},
										"type": "String"
									},
									"startTime": {
										"value": {
											"value": "@convertFromUtc(utcnow(),'Eastern Standard Time')",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"status": {
										"value": "R",
										"type": "String"
									},
									"statusMessage": {
										"value": "Just Started",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "BIP01",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			}
		],
		"variables": {
			"RefreshParameters": {
				"type": "String"
			},
			"Response": {
				"type": "Array"
			},
			"RefreshId": {
				"type": "String"
			},
			"EventId": {
				"type": "String"
			},
			"ProcessingConditional": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Warehouse_PBI"
		},
		"annotations": []
	}
}